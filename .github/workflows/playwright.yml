# 工作流程名稱
name: Playwright Tests
# 觸發條件
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# 工作
jobs:

  # 第一個工作：設置並運行測試
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 🛎
      uses: actions/checkout@v3

    - name: Setup Node.js 📦
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: corepack enable 📦
      run: corepack enable && yarn --version && yarn set version 4.1.1 

    - name: yarn install 📦
      run: yarn install

    - name: Install Playwright Browsers 📦
      run: yarn playwright install --with-deps

    - name: Run Playwright Tests  🧪
      run: yarn playwright test

    - name: Git Action Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Playwright Test Report
        path: "**/junit.xml"
        reporter: java-junit
        fail-on-error: 'false'

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 10

  # 第二個工作：合併報告並上傳
  publish_html_report:
    name: Publish HTML Report
    if: always()
    needs: [test]
    runs-on: ubuntu-latest

    outputs:
        timestamp: ${{ steps.timestampid.outputs.timestamp }}

    steps:
    - name: Set a timestamp 
      id: timestampid
    # this will store current time with UTC in outputs. timestamp (eg of value: 20231028_233147Z)
      run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"

    - name: Checkout 🛎
      uses: actions/checkout@v3

    - name: Setup Node.js 📦
      uses: actions/setup-node@v3
      with:
        node-version: 20

    # we now download the reports uploaded previously to merge them and create one single html report
    - name: Download reports from GitHub Actions Artifacts
      uses: actions/download-artifact@v4
      with:
        name: playwright-report # name of the file stored as artifact (as uploaded at the previous job)
        path: playwright-report/
        
    - name: Display structure of downloaded files
      run: ls -R

    - name: /[OPTIONAL] Upload full html report to artifacts for history
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ steps.timestampid.outputs.timestamp }} # name of the file you want to have once its uploaded
        path: playwright-report # path where the reports are, from where to take the files
        retention-days: 5

    - name: Push the new files to github pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report # from what folder to take files. It takes only contents
        destination_dir: ${{ steps.timestampid.outputs.timestamp }} # a sub-directory where to publish to avoid overwriting other reports
      
    - name: Write URL in summary
      run: echo "### Test results (link available after 20 secs) - https://${{ github.repository_owner }}.github.io/playwright-githubpage/${{ steps.timestampid.outputs.timestamp }}/" >> $GITHUB_STEP_SUMMARY

# 第三個工作：刪除舊的部署資料
  delete_old_folders:
    name: Delete old folders from github pages
    runs-on: ubuntu-latest
    permissions:
        contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          ref: gh-pages

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Pray then Run the script
        run: python rm_old_folders.py --n-days ${{ github.event.inputs.n_days }} --folder-name ${{ github.event.inputs.folder_name }}

      - name: Commit all changed files back to the repository
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: gh-pages
          commit_message: Delete folders older than ${{ github.event.inputs.n_days }} days
